package ec.ste.docusend.wsc;

import ec.ste.docusend.ConfigurationManager;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.6-1b01 Generated
 * source version: 2.2
 *
 */
@WebServiceClient(name = "WSLoader", targetNamespace = "http://load.ws.factura.ste.ec/", wsdlLocation = "http://localhost:8084/facturaEcuador/WSLoader?wsdl")
public class WSLoader_Service
        extends Service {

    private static URL WSLOADER_WSDL_LOCATION;
    private static WebServiceException WSLOADER_EXCEPTION;
    private final static QName WSLOADER_QNAME = new QName("http://load.ws.factura.ste.ec/", "WSLoader");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            ConfigurationManager cfm = ConfigurationManager.getInstance();
            cfm.loadValuesFromConfigurationFile();
            url = new URL(cfm.getService());
        } catch (Exception ex) {
            e = new WebServiceException(ex);
        }
        WSLOADER_WSDL_LOCATION = url;
        WSLOADER_EXCEPTION = e;
    }

    public WSLoader_Service() {
        super(__getWsdlLocation(), WSLOADER_QNAME);
    }

    public WSLoader_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), WSLOADER_QNAME, features);
    }

    public WSLoader_Service(URL wsdlLocation) {
        super(wsdlLocation, WSLOADER_QNAME);
    }

    public WSLoader_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WSLOADER_QNAME, features);
    }

    public WSLoader_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSLoader_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns WSLoader
     */
    @WebEndpoint(name = "WSLoaderPort")
    public WSLoader getWSLoaderPort() {
        return super.getPort(new QName("http://load.ws.factura.ste.ec/", "WSLoaderPort"), WSLoader.class);
    }

    /**
     *
     * @param features A list of {@link WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns WSLoader
     */
    @WebEndpoint(name = "WSLoaderPort")
    public WSLoader getWSLoaderPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://load.ws.factura.ste.ec/", "WSLoaderPort"), WSLoader.class, features);
    }

    public static void setWsdlLocation(String address) {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(address);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WSLOADER_WSDL_LOCATION = url;
        WSLOADER_EXCEPTION = e;
    }

    private static URL __getWsdlLocation() {
        if (WSLOADER_EXCEPTION != null) {
            throw WSLOADER_EXCEPTION;
        }
        return WSLOADER_WSDL_LOCATION;
    }

}
